q()
x=matrix(c(2,2,6,1,6,0) ,3,2)
matrix (c(2,2,6,1,6,0) ,3,2,byrow=TRUE)
q()
q()
treino_x= c(2,6,6)
treino_y= c(2,1,0)
teste_x = c(2,2,6)
teste_y= c(1,6,0)
plot(treino_x, treino_y, col = c('red','blue','red',clim=c(0,9))
points(teste_x,teste_y, col = c('blue','red','blue'), pch=19)
treino_x= c(2,6,6)
treino_y= c(2,1,0)
teste_x = c(2,2,6)
teste_y= c(1,6,0)
plot(treino_x, treino_y, col = c('red','blue','red',xlim=c(0,9), ylim= c(0,9))
points(teste_x,teste_y, col = c('blue','red','blue'), pch=19)
plot.new(treino_x,treino_y, col=('re','blue','red', xlim= c(0,9), ylim=c(0,9)))
plot(treino_x, treino_y, col = c(('red','blue','red',xlim=c(0,9), ylim= c(0,9))
points(teste_x,teste_y, col = c('blue','red','blue'), pch=19)
plot(treino_x,treino_y,col=c('red','blue','red'),xlim=c(0,9),ylim=c(0,9))
points(teste_x,teste_y,col=c('blue','red','blue'),pch=19)
install.packages(c('hflights',',mlr', 'tidyverse'))
library(hflights)
library(mlr)
library(,mlr)
library(tidyverse)
install.packages("lubridate")
library(tidyverse)
install.packages("lubridate")
rm(list = ls()) #limpa as variaves criadas
library(ISLR)
install.packages("ISLR")
install.packages("ISLR")
library(ISLR)
install.packages(c("bindrcpp", "broom", "curl", "lme4", "lubridate", "plogr", "selectr"))
library(ISLR)
library(ISLR)
rm(list = ls()) #limpa as variaves criadas
library(ISLR)
library(tidyverse)
install.packages("dplyr")
cite(ape)
cite("ape")
citation("ape")
install.packages("ape")
citation("ape")
dados= dados%>% dplyr::select(-X.1,
-id,
-Potassio,
-MO,
-CTC,
-Fosforo,
-Argila,
-Eca_0.5_cor,
-eca_1.0)
dados = read.csv("./2amostra_ha.csv")
names(dados)
dados=na.omit(dados)
dados= dados%>% dplyr::select(-X.1,
-id,
-Potassio,
-MO,
-CTC,
-Fosforo,
-Argila,
-Eca_0.5_cor,
-eca_1.0)
library("ggpubr")
library(georob)
library(dplyr)
library(tidyverse)
library(pedometrics)
library(raster)
library(gstat)
#library(googlesheets)
library(mapview)
dados = read.csv("./2amostra_ha.csv")
names(dados)
dados=na.omit(dados)
dados= dados%>% dplyr::select(-X.1,
-id,
-Potassio,
-MO,
-CTC,
-Fosforo,
-Argila,
-Eca_0.5_cor,
-eca_1.0)
dados$coordx= dados$X - min(dados$X)
dados$coordy= dados$Y - min(dados$Y)
dat= dplyr::rename(dados, BS=Saturacao.por.bases,
banda_azul = b2,
banda_verde= b3,
banda_vermelho= b4,
banda_IVP = b5,
swir1= b6,
swir2=b7,
x=X,
y=Y)
dat$BS = as.numeric(dat$BS)
dat$elevacao= as.numeric(dat$elevacao)
dat$piquetes[dat$piquetes=="27"]=26
dat$piquetes[dat$piquetes=="28"]=26
dat$piquetes[dat$piquetes=="30"]=26
dat$piquetes= as.factor(dat$piquetes)
dat=na.omit(dat)
str(dat)
cor= dat %>%
as.data.frame()%>%
dplyr::select(-piquetes, -coordx, -coordy)%>%
correlate(method = "spearman", diagonal = 1)%>%
as.data.frame()
library(corrr)
cor= dat %>%
as.data.frame()%>%
dplyr::select(-piquetes, -coordx, -coordy)%>%
correlate(method = "spearman", diagonal = 1)%>%
as.data.frame()
cor_above =cor %>%
gather(-rowname, key = "colname", value = "cor") %>%
filter(abs(cor) < 1 & abs(cor) >= 0.9) %>%
dplyr::select(rowname, colname, cor) %>%
distinct(colname, cor) %>%
arrange(cor)
selected_var = cor_above[,"colname"]
cor_above =cor %>%
gather(-rowname, key = "colname", value = "cor") %>%
filter(abs(cor) < 1 & abs(cor) >= 0.9) %>%
dplyr::select(rowname, colname, cor) %>%
distinct(cor) %>%
arrange(cor)
View(cor_above)
cor_above =cor %>%
gather(-rowname, key = "colname", value = "cor") %>%
filter(abs(cor) < 1 & abs(cor) >= 0.9) %>%
dplyr::select(rowname, colname, cor) %>%
distinct(cor) %>%
select(BS)
cor_above =cor %>%
gather(-rowname, key = "colname", value = "cor") %>%
filter(abs(cor) < 1 & abs(cor) >= 0.9) %>%
dplyr::select(rowname, colname, cor) %>%
distinct(cor) %>%
dplyr::select(BS) %>%
arrange(cor)
selected_var = cor_above, cor %>%
selected_var = c(cor_above, cor) %>%
select(cor, BS)
selected_var = cor %>%
select(BS)
selected_var = cor %>%
dplyr::select(BS)
View(selected_var)
View(cor_above)
cor_above =cor %>%
gather(-rowname, key = "colname", value = "cor") %>%
filter(abs(cor) < 1 & abs(cor) >= 0.9) %>%
dplyr::select(rowname, colname, cor) %>%
distinct(cor) %>%
arrange(cor)
cor_above =cor %>%
gather(-rowname, key = "colname", value = "cor") %>%
filter(abs(cor) < 1 & abs(cor) >= 0.9) %>%
dplyr::select(rowname, colname, cor) %>%
distinct(cor, rowname) %>%
arrange(cor)
View(cor_above)
cor_above =cor %>%
gather(-rowname, key = "colname", value = "cor") %>%
filter(abs(cor) < 1 & abs(cor) >= 0.9) %>%
dplyr::select(rowname, colname, cor) %>%
distinct(cor, rowname,colname) %>%
arrange(cor)
View(cor_above)
cor_above =cor %>%
gather(-rowname, key = "colname", value = "cor") %>%
filter(abs(cor) < 1 & abs(cor) >= 0.9) %>%
dplyr::select(rowname, colname, cor) %>%
unique(cor, rowname,colname) %>%
arrange(cor)
values =
selected_var = cor %>%
dplyr::select(BS, var) %>%
get()
values =
selected_var = cor %>%
dplyr::select(BS, var)
names(cpr)
names(cor)
values =
selected_var = cor %>%
dplyr::select(BS, rowname)
View(cor)
View(selected_var)
names_above = cor$rowname
names_above = cor_above$rowname
names_above = unique(cor_above$rowname)
names_above
View(cor_above)
values =
selected_var = cor %>%
dplyr::select(BS, rowname) %>%
filter(rowname = names_above) %>%
arrange(BS)
View(selected_var)
values =
selected_var = cor %>%
dplyr::select(BS, rowname) %>%
filter(rowname == names_above) %>%
arrange(BS)
View(selected_var)
names_above
cor$rowname
values =
selected_var = cor %>%
dplyr::select(BS, rowname) %>%
get(rowname == names_above) %>%
arrange(BS)
values =
selected_var = cor %>%
dplyr::select(BS, rowname) %>%
filter(rowname == names_above) %>%
arrange(BS)
values =
selected_var = cor %>%
dplyr::select(BS, rowname) %>%
filter(name %in% names_above) %>%
arrange(BS)
values =
selected_var = cor %>%
dplyr::select(BS, rowname) %>%
filter(rowname %in% names_above) %>%
arrange(BS)
View(selected_var)
rm(list = ls())
gc(reset=T)
graphics.off()
pacmann::p_load(gstat, raster, rstudioapi, sp)
install.packages("pacmann")
install.packages("gstat")
setwd("C:/Users/agda_/Google Drive/Doutorado/github_folders/geoR/script")
setwd("C:/Users/agda_/Google Drive/Doutorado/github_folders/geoR/script")
pacman::p_load(gstat, raster, sp)
librar(pacman)
library(pacman)
data = read.csv("../data/data points/data.csv")
data = read.csv("../data/data points/data.csv", sep = ";")
View(data)
View(data)
data = read.csv("../data/data points/data.csv", sep = ",")
class(data)
a = c(3,6,7,0)
a = data.frame(3,6,7,0)
View(a)
pacman::p_load(gstat, raster, sp, dplyr)
names(data)
data_sel = data %>% dplyr::select(x,y)
View(data_sel)
dplyr::selectate(hfahjhf)
